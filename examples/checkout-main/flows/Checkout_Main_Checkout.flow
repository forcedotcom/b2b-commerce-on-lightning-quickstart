<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Activates an order and create an Order Summary completing a checkout.

This may fallback to asynchronous mode even if it&apos;s marked synchronous, so we&apos;ll need to make sure there is logic to handle that case.</description>
        <name>Activate_Order</name>
        <label>Activate Order</label>
        <locationX>5106</locationX>
        <locationY>829</locationY>
        <actionName>activateOrderAction</actionName>
        <actionType>activateOrderAction</actionType>
        <connector>
            <targetReference>Get_Session_Possible_Error_ActivateOrder</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_2</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>orderStatus</name>
            <value>
                <stringValue>Activated</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>runAsync</name>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>Authorize_Tokenized_Payment</name>
        <label>Authorize Tokenized Payment</label>
        <locationX>4771</locationX>
        <locationY>826</locationY>
        <actionName>B2BAuthorizeTokenizedPayment</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Update_Next_State_to_ActivateOrder</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_2</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <description>This will cancel active checkouts. This helps create a secure and consistent checkout experience. Allowing multiple tabs to do checkout at the same time but on different steps could lead to unexpected and unreliable behavior. There would be a possibility of abuse by a bad actor. This prevents that.</description>
        <name>Cancel_Checkouts</name>
        <label>Cancel Checkouts</label>
        <locationX>722</locationX>
        <locationY>843</locationY>
        <actionName>cancelCartAsyncOperation</actionName>
        <actionType>cancelCartAsyncOperation</actionType>
        <connector>
            <targetReference>Start_Checkout_Session</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>Creates an order from a cart. Still requires activation of the cart to complete checkout.

This may fallback to asynchronous mode even if it&apos;s marked synchronous, so we&apos;ll need to make sure there is logic to handle that case.</description>
        <name>Cart_to_Order</name>
        <label>Cart to Order</label>
        <locationX>3996</locationX>
        <locationY>832</locationY>
        <actionName>cartToOrderAction</actionName>
        <actionType>cartToOrderAction</actionType>
        <connector>
            <targetReference>Get_Session_Possible_Errors_CartToOrder</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_2</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>runAsync</name>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <description>Should ensure that there is sufficient inventory to cover what&apos;s in the cart. This calls a custom inventory invocable action that should be further customized.</description>
        <name>Confirm_Inventory</name>
        <label>Confirm Inventory</label>
        <locationX>1649</locationX>
        <locationY>828</locationY>
        <actionName>B2BSyncCheckInventory</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Confirm_Price</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_1</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>cartIds</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>Updates and confirms the pricing of the items in the cart. This calls a custom inventory invocable action that should be further customized.
This node does not have any inputs and produces a warning when saved. If an external provider is desired for pricing, the Async Confirm Price node can be replaced with this node instead.</description>
        <name>Confirm_Price</name>
        <label>Confirm Price</label>
        <locationX>1945</locationX>
        <locationY>828</locationY>
        <actionName>B2BSyncPricing</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Shipping_Cost</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_1</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>cartIds</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>Finds the buyer&apos;s cart delivery groups and updates the associated Delivery Group IDs.</description>
        <name>Set_Checkout_Delivery_Method</name>
        <label>Set Checkout Delivery Method</label>
        <locationX>2885</locationX>
        <locationY>830</locationY>
        <actionName>setCheckoutDeliveryMethod</actionName>
        <actionType>setCheckoutDeliveryMethod</actionType>
        <connector>
            <targetReference>Taxes</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_3</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>deliveryMethodId</name>
            <value>
                <elementReference>orderDeliveryMethodId</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>This obtains the delivery methods and pricing to show the user on the delivery method screen. This calls a custom inventory invocable action that should be further customized.</description>
        <name>Shipping_Cost</name>
        <label>Shipping Cost</label>
        <locationX>2226</locationX>
        <locationY>828</locationY>
        <actionName>B2BSyncDelivery</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Delivery_Method_Screen</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_1</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>cartIds</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>Creates a new checkout session and gives it an initial state. This also updates the cart&apos;s status to be &apos;Checkout&apos;.</description>
        <name>Start_Checkout_Session</name>
        <label>Start Checkout Session</label>
        <locationX>918</locationX>
        <locationY>843</locationY>
        <actionName>checkoutSessionAction</actionName>
        <actionType>checkoutSessionAction</actionType>
        <connector>
            <targetReference>Shipping_Options</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>initialState</name>
            <value>
                <stringValue>Start</stringValue>
            </value>
        </inputParameters>
        <outputParameters>
            <assignToReference>checkoutSessionId</assignToReference>
            <name>requestId</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <description>Adds taxes to the cart. This calls a custom inventory invocable action that should be further customized.</description>
        <name>Taxes</name>
        <label>Taxes</label>
        <locationX>3167</locationX>
        <locationY>830</locationY>
        <actionName>B2BSyncTax</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Payment_And_Billing_Address</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_3</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>cartIds</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>52.0</apiVersion>
    <assignments>
        <description>This node is here for cosmetic purposes. It helps make the flow easier to read, but is not a necessary technical component.</description>
        <name>Beatification_No_Logic2</name>
        <label>Beatification - No Logic</label>
        <locationX>5867</locationX>
        <locationY>2361</locationY>
        <assignmentItems>
            <assignToReference>cartId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Order_Summary</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>If there&apos;s no payment method on the cart or a purchase order on the order, then the order is in an invalid state and processing should not continue.</description>
        <name>Set_Missing_Payment_Error_Message</name>
        <label>Set Missing Payment Error Message</label>
        <locationX>4758</locationX>
        <locationY>1544</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Cannot complete order. Missing Payment Information.</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Session_had_an_Error</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>cartToOrder was designed to be run asynchronously and expects a &quot;Next State&quot;. Without a next state, cartToOrder assumes a failure, so we provide when even though it&apos;s not necessary for the rest of the flow.</description>
        <name>Update_Next_State_to_ActivateOrder</name>
        <label>Update Next State to ActivateOrder</label>
        <locationX>5002</locationX>
        <locationY>1326</locationY>
        <assignmentItems>
            <assignToReference>mainCheckoutSession.NextState</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Activate Order</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_session_for_Activate_Order</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>cartToOrder was designed to be run asynchronously and expects a &quot;Next State&quot;. Without a next state, cartToOrder assumes a failure, so we provide when even though it&apos;s not necessary for the rest of the flow.</description>
        <name>Update_Next_State_to_Authorize_Payment</name>
        <label>Update Next State to Authorize Payment</label>
        <locationX>3996</locationX>
        <locationY>1321</locationY>
        <assignmentItems>
            <assignToReference>mainCheckoutSession.NextState</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Authorize Payment</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_session</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Activate_Order_has_Errors</name>
        <label>Activate Order has Errors?</label>
        <locationX>5356</locationX>
        <locationY>1335</locationY>
        <defaultConnector>
            <targetReference>Get_Final_Checkout_Session</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No errors</defaultConnectorLabel>
        <rules>
            <name>ActivateOrder_had_an_error</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>mainCheckoutSession.IsError</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Session_had_an_Error</targetReference>
            </connector>
            <label>ActivateOrder had an error</label>
        </rules>
    </decisions>
    <decisions>
        <name>Cart_To_Order_has_Errors</name>
        <label>Cart To Order has Errors?</label>
        <locationX>4274</locationX>
        <locationY>1334</locationY>
        <defaultConnector>
            <targetReference>Get_Cart</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No errors</defaultConnectorLabel>
        <rules>
            <name>CartToOrder_had_an_error</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>mainCheckoutSession.IsError</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Session_had_an_Error</targetReference>
            </connector>
            <label>CartToOrder had an error</label>
        </rules>
    </decisions>
    <decisions>
        <description>If the cart is already closed then the cart has already been converted to an order. If that&apos;s the case, show the buyer the Order Confirmation page.

There&apos;s more smarts that could be here by adding other outcomes of the status. For instance, if the webCart status is:
* &apos;Checkout&apos;: We probably need to cancel a checkout session
* &apos;Active&apos;: We could likely skip canceling the checkout, saving a small amount of time and resources</description>
        <name>Is_Cart_Already_Complete</name>
        <label>Is Cart Already Complete</label>
        <locationX>432</locationX>
        <locationY>1265</locationY>
        <defaultConnector>
            <targetReference>Cancel_Checkouts</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Checkout not Closed</defaultConnectorLabel>
        <rules>
            <name>Closed_Checkout_Complete</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>webCart.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Completed_Session</targetReference>
            </connector>
            <label>Closed - Checkout Complete</label>
        </rules>
    </decisions>
    <decisions>
        <description>Ensures that if the buyer starts a second checkout that we don&apos;t attempt to progress this duplicate checkout.</description>
        <name>Is_Session_Still_Valid_After_Delivery</name>
        <label>Is Session Still Valid After Delivery?</label>
        <locationX>2500</locationX>
        <locationY>1330</locationY>
        <defaultConnector>
            <targetReference>Set_Checkout_Delivery_Method</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Session is Valid</defaultConnectorLabel>
        <rules>
            <name>Session_No_Longer_Valid4</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>mainCheckoutSession.IsArchived</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Error_Invalid_Session</targetReference>
            </connector>
            <label>Session No Longer Valid</label>
        </rules>
    </decisions>
    <decisions>
        <description>Ensures that if the buyer starts a second checkout that we don&apos;t attempt to progress this duplicate checkout.</description>
        <name>Is_Session_Still_Valid_After_Payment</name>
        <label>Is Session Still Valid After Payment?</label>
        <locationX>3526</locationX>
        <locationY>1320</locationY>
        <defaultConnector>
            <targetReference>Checkout_Summary</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Session is Valid</defaultConnectorLabel>
        <rules>
            <name>Session_No_Longer_Valid2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>mainCheckoutSession.IsArchived</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Error_Invalid_Session</targetReference>
            </connector>
            <label>Session No Longer Valid</label>
        </rules>
    </decisions>
    <decisions>
        <description>Ensures that if the buyer starts a second checkout that we don&apos;t attempt to progress this duplicate checkout.</description>
        <name>Is_Session_Still_Valid_After_Shipping</name>
        <label>Is Session Still Valid After Shipping?</label>
        <locationX>1258</locationX>
        <locationY>1268</locationY>
        <defaultConnector>
            <targetReference>Get_Contact_Point_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Session is Valid</defaultConnectorLabel>
        <rules>
            <name>Session_No_Longer_Valid</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>mainCheckoutSession.IsArchived</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Error_Invalid_Session</targetReference>
            </connector>
            <label>Session No Longer Valid</label>
        </rules>
    </decisions>
    <decisions>
        <description>Ensures that if the buyer starts a second checkout that we don&apos;t attempt to progress this duplicate checkout.</description>
        <name>Is_Session_Still_Valid_After_Summary</name>
        <label>Is Session Still Valid After Summary?</label>
        <locationX>3753</locationX>
        <locationY>1322</locationY>
        <defaultConnector>
            <targetReference>Update_Next_State_to_Authorize_Payment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Session is Valid</defaultConnectorLabel>
        <rules>
            <name>Session_No_Longer_Valid3</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>mainCheckoutSession.IsArchived</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Error_Invalid_Session</targetReference>
            </connector>
            <label>Session No Longer Valid</label>
        </rules>
    </decisions>
    <decisions>
        <name>Should_Authorize_Payment</name>
        <label>Should Authorize Payment?</label>
        <locationX>4751</locationX>
        <locationY>1329</locationY>
        <defaultConnector>
            <targetReference>Update_Next_State_to_ActivateOrder</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Skip Authorization</defaultConnectorLabel>
        <rules>
            <name>Authorize_Payment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>webCart.PaymentMethodId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Authorize_Tokenized_Payment</targetReference>
            </connector>
            <label>Authorize Payment</label>
        </rules>
        <rules>
            <name>No_Purchase_Order_or_Payment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Order_Po_Number.PoNumber</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>webCart.PaymentMethodId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>webCart.GrandTotalAmount</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Missing_Payment_Error_Message</targetReference>
            </connector>
            <label>No Purchase Order or Payment</label>
        </rules>
    </decisions>
    <description>Most of the logic for the checkout lives in this flow. This is where the checkout starts and ends. It will terminate by redirecting to the Order Confirmation page or on an error page if an error occurs. Most of the integrations are run synchronously, though a few have to put on MQ for standard pricing and promotions.</description>
    <interviewLabel>(Checkout) Main B2B Checkout {!$Flow.CurrentDateTime}</interviewLabel>
    <label>(Checkout) Main Checkout</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>CheckoutFlow</processType>
    <recordLookups>
        <name>Get_Cart</name>
        <label>Get Cart</label>
        <locationX>4440</locationX>
        <locationY>1102</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Order_Po_Number</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </filters>
        <object>WebCart</object>
        <outputReference>webCart</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>PaymentMethodId</queriedFields>
        <queriedFields>GrandTotalAmount</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Cart Status is used to ensure the cart exists and if the cart is already complete, then forward buyer to the Order Confirmation page.</description>
        <name>Get_Cart_Status</name>
        <label>Get Cart Status</label>
        <locationX>440</locationX>
        <locationY>1072</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Cart_Already_Complete</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </filters>
        <object>WebCart</object>
        <outputReference>webCart</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Status</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>After each screen, we need to ensure the session is still active. If the buyer started a new checkout, this tab might still be active but the session is archived. We want to terminate if that&apos;s the case.</description>
        <name>Get_Checkout_Session_After_Payment</name>
        <label>Get Checkout Session After Payment</label>
        <locationX>3425</locationX>
        <locationY>1087</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Session_Still_Valid_After_Payment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>checkoutSessionId</elementReference>
            </value>
        </filters>
        <object>CartCheckoutSession</object>
        <outputReference>mainCheckoutSession</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>IsArchived</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>After each screen, we need to ensure the session is still active. If the buyer started a new checkout, this tab might still be active but the session is archived. We want to terminate if that&apos;s the case.</description>
        <name>Get_Checkout_Session_After_Summary</name>
        <label>Get Checkout Session After Summary</label>
        <locationX>3761</locationX>
        <locationY>1097</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Session_Still_Valid_After_Summary</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>checkoutSessionId</elementReference>
            </value>
        </filters>
        <object>CartCheckoutSession</object>
        <outputReference>mainCheckoutSession</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>NextState</queriedFields>
        <queriedFields>IsArchived</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Get the non-archived session. Only one session will be non-archived at a time, and since we know we have a completed cart, this session is the session that was used to complete the checkout.</description>
        <name>Get_Completed_Session</name>
        <label>Get Completed Session</label>
        <locationX>438</locationX>
        <locationY>2362</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Beatification_No_Logic2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WebCartId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsArchived</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>CartCheckoutSession</object>
        <outputReference>mainCheckoutSession</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>OrderId</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Get the Contact Point Address that the buyer selected as their shipping address.</description>
        <name>Get_Contact_Point_Address</name>
        <label>Get Contact Point Address</label>
        <locationX>1453</locationX>
        <locationY>1075</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Cart_Delivery_Group_Address</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>contactPointAddressId</elementReference>
            </value>
        </filters>
        <object>ContactPointAddress</object>
        <outputReference>shippingContactPointAddress</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>City</queriedFields>
        <queriedFields>Country</queriedFields>
        <queriedFields>GeocodeAccuracy</queriedFields>
        <queriedFields>Latitude</queriedFields>
        <queriedFields>Longitude</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>PostalCode</queriedFields>
        <queriedFields>State</queriedFields>
        <queriedFields>Street</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>The checkout session contains a foreign key to the order, which we&apos;ll use to get the order summary Id.</description>
        <name>Get_Final_Checkout_Session</name>
        <label>Get Final Checkout Session</label>
        <locationX>5615</locationX>
        <locationY>1100</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Order_Summary</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>checkoutSessionId</elementReference>
            </value>
        </filters>
        <object>CartCheckoutSession</object>
        <outputReference>mainCheckoutSession</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>OrderId</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Order_Po_Number</name>
        <label>Get Order Po Number</label>
        <locationX>4585</locationX>
        <locationY>1102</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Should_Authorize_Payment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>mainCheckoutSession.OrderId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>PoNumber</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>On the Order Confirmation, we show data from the Order Summary. This gets the order summary id.</description>
        <name>Get_Order_Summary</name>
        <label>Get Order Summary</label>
        <locationX>5867</locationX>
        <locationY>1100</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Order_Confirmation_Redirect</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OriginalOrderId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>mainCheckoutSession.OrderId</elementReference>
            </value>
        </filters>
        <object>OrderSummary</object>
        <outputAssignments>
            <assignToReference>OrderSummaryId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>After each screen, we need to ensure the session is still active. If the buyer started a new checkout, this tab might still be active but the session is archived. We want to terminate if that&apos;s the case.</description>
        <name>Get_Session_After_Delivery</name>
        <label>Get Session After Delivery</label>
        <locationX>2510</locationX>
        <locationY>1099</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Session_Still_Valid_After_Delivery</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>checkoutSessionId</elementReference>
            </value>
        </filters>
        <object>CartCheckoutSession</object>
        <outputReference>mainCheckoutSession</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>IsArchived</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>After each screen, we need to ensure the session is still active. If the buyer started a new checkout, this tab might still be active but the session is archived. We want to terminate if that&apos;s the case.</description>
        <name>Get_Session_After_Shipping</name>
        <label>Get Session After Shipping</label>
        <locationX>1266</locationX>
        <locationY>1065</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Session_Still_Valid_After_Shipping</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>checkoutSessionId</elementReference>
            </value>
        </filters>
        <object>CartCheckoutSession</object>
        <outputReference>mainCheckoutSession</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>IsArchived</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Session_Possible_Error_ActivateOrder</name>
        <label>Get Session Possible Error ActivateOrder</label>
        <locationX>5364</locationX>
        <locationY>1099</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Activate_Order_has_Errors</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>checkoutSessionId</elementReference>
            </value>
        </filters>
        <object>CartCheckoutSession</object>
        <outputReference>mainCheckoutSession</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>IsError</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Session_Possible_Errors_CartToOrder</name>
        <label>Get Session Possible Errors CartToOrder</label>
        <locationX>4282</locationX>
        <locationY>1100</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Cart_To_Order_has_Errors</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>checkoutSessionId</elementReference>
            </value>
        </filters>
        <object>CartCheckoutSession</object>
        <outputReference>mainCheckoutSession</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>IsError</queriedFields>
        <queriedFields>OrderId</queriedFields>
    </recordLookups>
    <recordUpdates>
        <description>Copies the contact point address fields into the CartDeliveryGroup. Also, adds the shipping instructions.</description>
        <name>Update_Cart_Delivery_Group_Address</name>
        <label>Update Cart Delivery Group&apos;s Address</label>
        <locationX>1649</locationX>
        <locationY>1075</locationY>
        <connector>
            <targetReference>Confirm_Inventory</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CartId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>DeliverToCity</field>
            <value>
                <elementReference>shippingContactPointAddress.City</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DeliverToCountry</field>
            <value>
                <elementReference>shippingContactPointAddress.Country</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DeliverToGeocodeAccuracy</field>
            <value>
                <elementReference>shippingContactPointAddress.GeocodeAccuracy</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DeliverToLatitude</field>
            <value>
                <elementReference>shippingContactPointAddress.Latitude</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DeliverToLongitude</field>
            <value>
                <elementReference>shippingContactPointAddress.Longitude</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DeliverToName</field>
            <value>
                <elementReference>shippingContactPointAddress.Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DeliverToPostalCode</field>
            <value>
                <elementReference>shippingContactPointAddress.PostalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DeliverToState</field>
            <value>
                <elementReference>shippingContactPointAddress.State</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DeliverToStreet</field>
            <value>
                <elementReference>shippingContactPointAddress.Street</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ShippingInstructions</field>
            <value>
                <elementReference>shippingInstructions</elementReference>
            </value>
        </inputAssignments>
        <object>CartDeliveryGroup</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_session</name>
        <label>Update session</label>
        <locationX>3996</locationX>
        <locationY>1095</locationY>
        <connector>
            <targetReference>Cart_to_Order</targetReference>
        </connector>
        <inputReference>mainCheckoutSession</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_session_for_Activate_Order</name>
        <label>Update session for Activate Order</label>
        <locationX>5106</locationX>
        <locationY>1111</locationY>
        <connector>
            <targetReference>Activate_Order</targetReference>
        </connector>
        <inputReference>mainCheckoutSession</inputReference>
    </recordUpdates>
    <runInMode>SystemModeWithSharing</runInMode>
    <screens>
        <name>Checkout_Summary</name>
        <label>Checkout Summary</label>
        <locationX>3752</locationX>
        <locationY>824</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Get_Checkout_Session_After_Summary</targetReference>
        </connector>
        <fields>
            <name>RO_ShippingAddress</name>
            <extensionName>forceCommunity:commerceDelivery</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>cartId</name>
                <value>
                    <elementReference>cartId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>RO_DeliveryMethod</name>
            <extensionName>commerce_checkout:deliveryMethod</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>isReadOnly</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>cartId</name>
                <value>
                    <elementReference>cartId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>RO_CheckoutSummary</name>
            <extensionName>forceCommunity:commerceCheckoutSummary</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>cartId</name>
                <value>
                    <elementReference>cartId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Delivery_Method_Screen</name>
        <label>Delivery Method Screen</label>
        <locationX>2508</locationX>
        <locationY>828</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Get_Session_After_Delivery</targetReference>
        </connector>
        <fields>
            <name>DeliveryMethod</name>
            <extensionName>commerce_checkout:deliveryMethod</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>cartId</name>
                <value>
                    <elementReference>cartId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>orderDeliveryMethodId</assignToReference>
                <name>orderDeliveryMethodId</name>
            </outputParameters>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Order_Confirmation_Redirect</name>
        <label>Order Confirmation Redirect</label>
        <locationX>5867</locationX>
        <locationY>812</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>OrderConfirmationRedirectComp</name>
            <extensionName>forceCommunity:flowRedirect</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>pageName</name>
                <value>
                    <stringValue>orderconfirmation</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>OrderSummaryId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Payment_And_Billing_Address</name>
        <label>Payment And Billing Address</label>
        <locationX>3425</locationX>
        <locationY>830</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Get_Checkout_Session_After_Payment</targetReference>
        </connector>
        <fields>
            <name>paymentMethodScreen</name>
            <extensionName>c:paymentMethod</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>cartId</name>
                <value>
                    <elementReference>cartId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>nextButtonLabel</name>
                <value>
                    <stringValue>Next</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>previousButtonLabel</name>
                <value>
                    <stringValue>Previous</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>cvvRequired</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>cardTypeRequired</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>poRequired</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>billingAddressRequired</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>Display the shipping address and instructions for the user to update. Place differently than other screen nodes to reduce overlapping lines.</description>
        <name>Shipping_Options</name>
        <label>Shipping Options</label>
        <locationX>1266</locationX>
        <locationY>843</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Get_Session_After_Shipping</targetReference>
        </connector>
        <fields>
            <name>Shipping</name>
            <extensionName>forceCommunity:commerceDelivery</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>readonly</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>cartId</name>
                <value>
                    <elementReference>cartId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>shippingInstructions</assignToReference>
                <name>shippingInstructions</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>contactPointAddressId</assignToReference>
                <name>contactPointAddressId</name>
            </outputParameters>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>1053</locationY>
        <connector>
            <targetReference>Get_Cart_Status</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <description>Shows the fault message. Same as other error subflows that show fault message (though copied to make the flow look nicer).</description>
        <name>Error</name>
        <label>Error</label>
        <locationX>912</locationX>
        <locationY>408</locationY>
        <flowName>Checkout_Subflow_Error</flowName>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>ErrorMessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <description>Shows the fault message. Same as other error subflows that show fault message (though copied to make the flow look nicer).</description>
        <name>Error_1</name>
        <label>Error</label>
        <locationX>2025</locationX>
        <locationY>379</locationY>
        <flowName>Checkout_Subflow_Error</flowName>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>ErrorMessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Error_2</name>
        <label>Error</label>
        <locationX>4597</locationX>
        <locationY>250</locationY>
        <flowName>Checkout_Subflow_Error</flowName>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>ErrorMessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <description>Shows the fault message. Same as other error subflows that show fault message (though copied to make the flow look nicer).</description>
        <name>Error_3</name>
        <label>Error</label>
        <locationX>3049</locationX>
        <locationY>358</locationY>
        <flowName>Checkout_Subflow_Error</flowName>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>ErrorMessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Error_Invalid_Session</name>
        <label>Error - Invalid Session</label>
        <locationX>3238</locationX>
        <locationY>2198</locationY>
        <flowName>Checkout_Subflow_Error</flowName>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>ErrorMessage</name>
            <value>
                <stringValue>Looks like you don&apos;t have an active CartCheckoutSession. Do you have a checkout running in another tab?</stringValue>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <description>This error subflow catches the cases where the built in cartToOrder/activateOrder marked the session as having had an error.</description>
        <name>Session_had_an_Error</name>
        <label>Session had an Error</label>
        <locationX>4758</locationX>
        <locationY>1752</locationY>
        <flowName>Checkout_Subflow_Error</flowName>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>ErrorMessage</name>
            <value>
                <elementReference>errorMessage</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <name>cartId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>checkoutSessionId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>contactPointAddressId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Used to put error messages in for the error subflow</description>
        <name>errorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>mainCheckoutSession</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>CartCheckoutSession</objectType>
    </variables>
    <variables>
        <description>This tracks whether the user clicked the &quot;Next&quot; button or &quot;Previous&quot; button (NEXT, BACK).</description>
        <name>navigationAction</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>orderDeliveryMethodId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>OrderId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>OrderSummaryId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>sessions</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>CartCheckoutSession</objectType>
    </variables>
    <variables>
        <name>shippingContactPointAddress</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ContactPointAddress</objectType>
    </variables>
    <variables>
        <name>shippingInstructions</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>webCart</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>WebCart</objectType>
    </variables>
</Flow>
