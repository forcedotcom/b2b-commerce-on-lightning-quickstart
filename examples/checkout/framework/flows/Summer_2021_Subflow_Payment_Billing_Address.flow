<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>52.0</apiVersion>
    <assignments>
        <description>if purchase order is selected. assign the official PO number value to that of the entered PO number value.</description>
        <name>Assign_PO</name>
        <label>Assign PO to value</label>
        <locationX>770</locationX>
        <locationY>50</locationY>
        <assignmentItems>
            <assignToReference>poNumberValue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>enteredPoNumberValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Address_if_changed</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>If the selected payment method is Credit Card, clear the PO number and make it an empty string.</description>
        <name>Assign_PO_to_null</name>
        <label>Assign PO to null</label>
        <locationX>770</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>poNumberValue</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Address_if_changed</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>A decision node that sets the payment type variable to string &quot;Credit Card&quot; or string &quot;Purchase Order&quot;</description>
        <name>Which_payment_Type_is_selected</name>
        <label>Which payment type is selected</label>
        <locationX>551</locationX>
        <locationY>202</locationY>
        <defaultConnector>
            <targetReference>Assign_PO</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Credit_Card</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>paymentType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CardPayment</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_PO_to_null</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>false</doesRequireRecordChangedToMeetCriteria>
            <label>Credit Card</label>
        </rules>
        <rules>
            <name>Purchase_Order</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>paymentType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PurchaseOrderNumber</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_PO</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>false</doesRequireRecordChangedToMeetCriteria>
            <label>Purchase Order</label>
        </rules>
    </decisions>
    <decisions>
        <description>Only get the ContactPointAddress record associated with the new address selected and update</description>
        <name>Update_Address_if_changed</name>
        <label>Update address if changed</label>
        <locationX>950</locationX>
        <locationY>201</locationY>
        <defaultConnector>
            <targetReference>updateCartRecordWithOnlyPO</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>update_address</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>contactPointAddressId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>contactPointAddressId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_ContactPointAddress</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>false</doesRequireRecordChangedToMeetCriteria>
            <label>Update Address</label>
        </rules>
    </decisions>
    <description>For your payment component to function properly, you need a Payment Gateway integration. Use our reference implementations as a starting point or create your own. For more information, navigate to the Commerce app, find your store, and choose Administration &gt; Store Integrations.</description>
    <interviewLabel>Enter Payment and Billing {!$Flow.CurrentDateTime}</interviewLabel>
    <isTemplate>true</isTemplate>
    <label>(Summer 2021) Subflow Subflow - Payment and Billing Address</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processType>CheckoutFlow</processType>
    <recordLookups>
        <description>This Gets the contact point address record and selects all the fields we are going to store to in subsequent steps.</description>
        <name>Get_ContactPointAddress</name>
        <label>Get ContactPointAddress</label>
        <locationX>1085</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>updateCartRecord</targetReference>
        </connector>
        <faultConnector>
            <targetReference>show_error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>contactPointAddressId</elementReference>
            </value>
        </filters>
        <object>ContactPointAddress</object>
        <outputReference>ContactPointAddressRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>City</queriedFields>
        <queriedFields>Street</queriedFields>
        <queriedFields>Country</queriedFields>
        <queriedFields>State</queriedFields>
        <queriedFields>PostalCode</queriedFields>
        <queriedFields>Latitude</queriedFields>
        <queriedFields>Longitude</queriedFields>
        <queriedFields>GeocodeAccuracy</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_PaymentGatewayId_From_StoreIntegratedService</name>
        <label>Get PaymentGatewayId From StoreIntegratedService</label>
        <locationX>350</locationX>
        <locationY>600</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>paymentMethodScreen</targetReference>
        </connector>
        <faultConnector>
            <targetReference>paymentMethodScreen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StoreId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>storeId</elementReference>
            </value>
        </filters>
        <filters>
            <field>ServiceProviderType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Payment</stringValue>
            </value>
        </filters>
        <object>StoreIntegratedService</object>
        <outputAssignments>
            <assignToReference>paymentGatewayId</assignToReference>
            <field>Integration</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Store_ID_From_Cart</name>
        <label>Get Store ID From Cart</label>
        <locationX>158</locationX>
        <locationY>900</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_PaymentGatewayId_From_StoreIntegratedService</targetReference>
        </connector>
        <faultConnector>
            <targetReference>show_error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </filters>
        <object>WebCart</object>
        <outputAssignments>
            <assignToReference>storeId</assignToReference>
            <field>WebStoreId</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <description>Since the cart to order step has already happened we need to update both the Cart and Order records. In this update records node we are updating the cart record.</description>
        <name>updateCartRecord</name>
        <label>updateCartRecord</label>
        <locationX>1260</locationX>
        <locationY>350</locationY>
        <connector>
            <targetReference>updateOrderRecord</targetReference>
        </connector>
        <faultConnector>
            <targetReference>show_error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>PoNumber</field>
            <value>
                <elementReference>poNumberValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingStreet</field>
            <value>
                <elementReference>ContactPointAddressRecord.Street</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingState</field>
            <value>
                <elementReference>ContactPointAddressRecord.State</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingCity</field>
            <value>
                <elementReference>ContactPointAddressRecord.City</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingCountry</field>
            <value>
                <elementReference>ContactPointAddressRecord.Country</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingPostalCode</field>
            <value>
                <elementReference>ContactPointAddressRecord.PostalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingLongitude</field>
            <value>
                <elementReference>ContactPointAddressRecord.Longitude</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingLatitude</field>
            <value>
                <elementReference>ContactPointAddressRecord.Latitude</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingGeocodeAccuracy</field>
            <value>
                <elementReference>ContactPointAddressRecord.GeocodeAccuracy</elementReference>
            </value>
        </inputAssignments>
        <object>WebCart</object>
    </recordUpdates>
    <recordUpdates>
        <description>Since the cart to order step has already happened we need to update both the Cart and Order records. In this update records node we are updating the order record.</description>
        <name>updateOrderRecord</name>
        <label>updateOrderRecord</label>
        <locationX>1435</locationX>
        <locationY>350</locationY>
        <connector>
            <targetReference>Set_State</targetReference>
        </connector>
        <faultConnector>
            <targetReference>show_error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>orderId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>PoNumber</field>
            <value>
                <elementReference>poNumberValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingStreet</field>
            <value>
                <elementReference>ContactPointAddressRecord.Street</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingState</field>
            <value>
                <elementReference>ContactPointAddressRecord.State</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingCity</field>
            <value>
                <elementReference>ContactPointAddressRecord.City</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingCountry</field>
            <value>
                <elementReference>ContactPointAddressRecord.Country</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingPostalCode</field>
            <value>
                <elementReference>ContactPointAddressRecord.PostalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingLatitude</field>
            <value>
                <elementReference>ContactPointAddressRecord.Latitude</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingLongitude</field>
            <value>
                <elementReference>ContactPointAddressRecord.Longitude</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BillingGeocodeAccuracy</field>
            <value>
                <elementReference>ContactPointAddressRecord.GeocodeAccuracy</elementReference>
            </value>
        </inputAssignments>
        <object>Order</object>
    </recordUpdates>
    <recordUpdates>
        <name>updateOrderRecordWithOnlyPO</name>
        <label>updateOrderRecordWithOnlyPO</label>
        <locationX>1400</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Set_State</targetReference>
        </connector>
        <faultConnector>
            <targetReference>show_error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>orderId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>PoNumber</field>
            <value>
                <elementReference>poNumberValue</elementReference>
            </value>
        </inputAssignments>
        <object>Order</object>
    </recordUpdates>
    <recordUpdates>
        <name>updateCartRecordWithOnlyPO</name>
        <label>updateCartRecordWithOnlyPO</label>
        <locationX>1200</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>updateOrderRecordWithOnlyPO</targetReference>
        </connector>
        <faultConnector>
            <targetReference>show_error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>PoNumber</field>
            <value>
                <elementReference>poNumberValue</elementReference>
            </value>
        </inputAssignments>
        <object>WebCart</object>
    </recordUpdates>
    <screens>
        <description>Choose between Purchase Order and Credit Card to pay for your order. Also enter or select a billing address.</description>
        <name>paymentMethodScreen</name>
        <label>paymentMethodScreen</label>
        <locationX>350</locationX>
        <locationY>400</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Validate_Checkout_State</targetReference>
        </connector>
        <fields>
            <name>paymentMethod</name>
            <extensionName>forceCommunity:commercePayment</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>cartId</name>
                <value>
                    <elementReference>cartId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>paymentGatewayId</name>
                <value>
                    <elementReference>paymentGatewayId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>contactPointAddressId</assignToReference>
                <name>contactPointAddressId</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>enteredPoNumberValue</assignToReference>
                <name>purchaseOrderNumber</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>paymentType</assignToReference>
                <name>paymentType</name>
            </outputParameters>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>24</locationX>
        <locationY>40</locationY>
        <connector>
            <targetReference>Get_Store_ID_From_Cart</targetReference>
        </connector>
        <doesRequireRecordChangedToMeetCriteria>false</doesRequireRecordChangedToMeetCriteria>
    </start>
    <status>Active</status>
    <subflows>
        <description>Shows the error</description>
        <name>show_error</name>
        <label>show error</label>
        <locationX>1260</locationX>
        <locationY>900</locationY>
        <flowName>Summer_2021_Subflow_Error</flowName>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>ErrorMessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <description>Sets the next state</description>
        <name>Set_State</name>
        <label>Set State</label>
        <locationX>1600</locationX>
        <locationY>200</locationY>
        <flowName>Summer_2021_Subflow_Update_Checkout_State</flowName>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>newState</name>
            <value>
                <elementReference>nextState</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>false</storeOutputAutomatically>
    </subflows>
    <subflows>
        <description></description>
        <name>Validate_Checkout_State</name>
        <label>Validate Checkout State</label>
        <locationX>350</locationX>
        <locationY>200</locationY>
        <connector>
            <targetReference>Which_payment_Type_is_selected</targetReference>
        </connector>
        <flowName>Summer_2021_Subflow_Checkout_Session</flowName>
        <inputAssignments>
            <name>cartId</name>
            <value>
                <elementReference>cartId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>expCurrentState</name>
            <value>
                <elementReference>currentState</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <name>cartId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>nextState</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>poNumberValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>orderId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>paymentType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>ContactPointAddressRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ContactPointAddress</objectType>
    </variables>
    <variables>
        <name>contactPointAddressId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>this value could be null</description>
        <name>enteredPoNumberValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>storeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>paymentGatewayId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>currentState</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
